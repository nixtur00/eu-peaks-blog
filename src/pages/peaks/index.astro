---
import Layout from '../../layouts/Layout.astro';
import Navigation from '../../components/Navigation.astro';
import Footer from '../../components/Footer.astro';
import { getCollection } from 'astro:content';

const peaks = await getCollection('peaks');
const sortedPeaks = peaks.sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime());

const euCountries = [
  'Austria', 'Belgium', 'Bulgaria', 'Croatia', 'Cyprus', 'Czech Republic', 
  'Denmark', 'Estonia', 'Finland', 'France', 'Germany', 'Greece', 
  'Hungary', 'Ireland', 'Italy', 'Latvia', 'Lithuania', 'Luxembourg', 
  'Malta', 'Netherlands', 'Poland', 'Portugal', 'Romania', 'Slovakia', 
  'Slovenia', 'Spain', 'Sweden'
];
---

<Layout title="Adventure Log - EU Peaks">
  <Navigation />
  
  <main class="min-h-screen py-12">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-12">
        <h1 class="text-4xl font-bold mb-4">Adventure Log</h1>
        <p class="text-xl text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
          Every summit tells a story.
        </p>
        
        <div class="mt-8 w-full">
          <img 
            src="/images/log/CP108574.JPG" 
            alt="Mountain adventure scene" 
            class="w-full h-80 md:h-96 lg:h-[28rem] object-cover rounded-lg shadow-lg"
          />
        </div>
      </div>

      <!-- Country Selector -->
      <div class="mb-8 flex justify-center">
        <div class="w-full max-w-md">
          <label for="country-select" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            Filter by Country
          </label>
          <select 
            id="country-select" 
            class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
          >
            <option value="">All EU Countries</option>
            {euCountries.map((country) => (
              <option value={country}>{country}</option>
            ))}
          </select>
        </div>
      </div>

      {sortedPeaks.length === 0 ? (
        <div class="text-center py-16">
          <h2 class="text-2xl font-semibold mb-4">No adventures yet</h2>
          <p class="text-gray-600 dark:text-gray-400">
            The journey is just beginning. Adventures will be documented here as they happen.
          </p>
        </div>
      ) : (
        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {sortedPeaks.map((peak) => (
            <a href={`/peaks/${peak.slug}`} class="group">
              <article class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow">
                <div class="h-48 bg-gray-200 dark:bg-gray-700"></div>
                <div class="p-6">
                  <div class="flex items-center justify-between mb-2">
                    <span class="text-sm font-medium text-blue-600 dark:text-blue-400">
                      {peak.data.country}
                    </span>
                    <span class="text-sm text-gray-500">
                      {new Date(peak.data.date).toLocaleDateString()}
                    </span>
                  </div>
                  <h2 class="text-xl font-semibold mb-2 group-hover:text-blue-600 transition-colors">
                    {peak.data.title}
                  </h2>
                  <p class="text-gray-600 dark:text-gray-400 mb-3 line-clamp-2">
                    {peak.data.description}
                  </p>
                  <div class="flex items-center justify-between text-sm text-gray-500">
                    <span>{peak.data.elevation_m}m</span>
                    <span class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">
                      {peak.data.difficulty_rating}
                    </span>
                  </div>
                </div>
              </article>
            </a>
          ))}
        </div>
      )}
    </div>
  </main>

  <Footer />
</Layout>

<script>
  // Country selector functionality
  document.addEventListener('DOMContentLoaded', () => {
    const countrySelect = document.getElementById('country-select') as HTMLSelectElement;
    
    if (countrySelect) {
      countrySelect.addEventListener('change', (event) => {
        const selectedCountry = (event.target as HTMLSelectElement).value;
        
        if (selectedCountry) {
          console.log(`Selected country: ${selectedCountry}`);
          // TODO: Implement filtering logic when articles are available
          // This will filter and display articles for the selected country
        } else {
          console.log('Show all countries');
          // TODO: Show all articles
        }
      });
    }
  });
</script> 