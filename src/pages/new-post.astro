---
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
import Footer from '../components/Footer.astro';

const euCountries = [
  'Austria', 'Belgium', 'Bulgaria', 'Croatia', 'Cyprus', 'Czech Republic', 
  'Denmark', 'Estonia', 'Finland', 'France', 'Germany', 'Greece', 
  'Hungary', 'Ireland', 'Italy', 'Latvia', 'Lithuania', 'Luxembourg', 
  'Malta', 'Netherlands', 'Poland', 'Portugal', 'Romania', 'Slovakia', 
  'Slovenia', 'Spain', 'Sweden'
];

const difficulties = ['Easy', 'Moderate', 'Hard', 'Expert'];
---

<Layout title="Create New Adventure - EU Peaks">
  <Navigation />
  
  <main class="min-h-screen py-12">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-8">
        <h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-4">Create New Adventure</h1>
        <p class="text-gray-600 dark:text-gray-400">Document your latest peak adventure</p>
      </div>

      <form id="adventure-form" class="space-y-6">
        <!-- Basic Information -->
        <div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md">
          <h2 class="text-xl font-semibold mb-4 text-gray-900 dark:text-white">Basic Information</h2>
          
          <div class="grid md:grid-cols-2 gap-4">
            <div>
              <label for="title" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                Peak Name *
              </label>
              <input 
                type="text" 
                id="title" 
                name="title" 
                required
                class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                placeholder="e.g., Mount Musala"
              />
            </div>
            
            <div>
              <label for="country" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                Country *
              </label>
              <select 
                id="country" 
                name="country" 
                required
                class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              >
                <option value="">Select a country</option>
                {euCountries.map((country) => (
                  <option value={country}>{country}</option>
                ))}
              </select>
            </div>
            
            <div>
              <label for="elevation" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                Elevation (m) *
              </label>
              <input 
                type="number" 
                id="elevation" 
                name="elevation" 
                required
                min="0"
                class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                placeholder="2925"
              />
            </div>
            
            <div>
              <label for="date" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                Date *
              </label>
              <input 
                type="date" 
                id="date" 
                name="date" 
                required
                class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              />
            </div>
            
            <div>
              <label for="difficulty" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                Difficulty *
              </label>
              <select 
                id="difficulty" 
                name="difficulty" 
                required
                class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              >
                <option value="">Select difficulty</option>
                {difficulties.map((difficulty) => (
                  <option value={difficulty}>{difficulty}</option>
                ))}
              </select>
            </div>
            
            <div>
              <label for="duration" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                Duration
              </label>
              <input 
                type="text" 
                id="duration" 
                name="duration"
                class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                placeholder="e.g., 1 day, 6 hours"
              />
            </div>
          </div>
          
          <div class="mt-4">
            <label for="description" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
              Short Description *
            </label>
            <textarea 
              id="description" 
              name="description" 
              required
              rows="3"
              class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="Brief description for the adventure list..."
            ></textarea>
          </div>
          
          <div class="mt-4">
            <label for="tags" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
              Tags (comma-separated)
            </label>
            <input 
              type="text" 
              id="tags" 
              name="tags"
              class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="e.g., hiking, alpine, challenging"
            />
          </div>
          
          <div class="mt-4">
            <label for="youtubeUrl" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
              YouTube URL (optional)
            </label>
            <input 
              type="url" 
              id="youtubeUrl" 
              name="youtubeUrl"
              class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              placeholder="https://youtube.com/watch?v=..."
            />
          </div>
          
          <div class="mt-4 flex items-center">
            <input 
              type="checkbox" 
              id="featured" 
              name="featured"
              class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
            />
            <label for="featured" class="ml-2 block text-sm text-gray-700 dark:text-gray-300">
              Mark as featured adventure
            </label>
          </div>
        </div>

        <!-- Image Upload -->
        <div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md">
          <h2 class="text-xl font-semibold mb-4 text-gray-900 dark:text-white">Images</h2>
          
          <div class="border-2 border-dashed border-gray-300 dark:border-gray-600 rounded-lg p-6 text-center">
            <input type="file" id="image-upload" accept="image/*" multiple class="hidden" />
            <div id="drop-zone" class="cursor-pointer">
              <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
              </svg>
              <p class="mt-2 text-sm text-gray-600 dark:text-gray-400">
                <span class="font-medium">Click to upload</span> or drag and drop images
              </p>
              <p class="text-xs text-gray-500">PNG, JPG, GIF up to 10MB each</p>
            </div>
          </div>
          
          <div id="image-preview" class="mt-4 grid grid-cols-2 md:grid-cols-3 gap-4"></div>
        </div>

        <!-- Content Editor -->
        <div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md">
          <h2 class="text-xl font-semibold mb-4 text-gray-900 dark:text-white">Adventure Story</h2>
          
          <!-- Toolbar -->
          <div class="border border-gray-300 dark:border-gray-600 rounded-t-md p-2 bg-gray-50 dark:bg-gray-700 flex flex-wrap gap-2">
            <button type="button" class="toolbar-btn" data-command="bold" title="Bold">
              <strong>B</strong>
            </button>
            <button type="button" class="toolbar-btn" data-command="italic" title="Italic">
              <em>I</em>
            </button>
            <button type="button" class="toolbar-btn" data-command="underline" title="Underline">
              <u>U</u>
            </button>
            <div class="border-l border-gray-300 dark:border-gray-500 mx-2"></div>
            <button type="button" class="toolbar-btn" data-command="insertOrderedList" title="Numbered List">
              1.
            </button>
            <button type="button" class="toolbar-btn" data-command="insertUnorderedList" title="Bullet List">
              •
            </button>
            <div class="border-l border-gray-300 dark:border-gray-500 mx-2"></div>
            <button type="button" class="toolbar-btn" data-command="formatBlock" data-value="h2" title="Heading 2">
              H2
            </button>
            <button type="button" class="toolbar-btn" data-command="formatBlock" data-value="h3" title="Heading 3">
              H3
            </button>
            <button type="button" class="toolbar-btn" data-command="formatBlock" data-value="p" title="Paragraph">
              P
            </button>
          </div>
          
          <!-- Editor -->
          <div 
            id="content-editor" 
            contenteditable="true"
            class="min-h-96 p-4 border border-t-0 border-gray-300 dark:border-gray-600 rounded-b-md bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500"
            data-placeholder="Write your adventure story here..."
          >
            <h2>The Adventure</h2>
            <p>Describe your peak adventure...</p>
            
            <h2>The Journey</h2>
            <p>Detail the route and experience...</p>
            
            <h2>Summit Experience</h2>
            <p>Share the summit moment...</p>
            
            <h2>Practical Information</h2>
            <ul>
              <li><strong>Best Time to Visit:</strong> </li>
              <li><strong>Starting Point:</strong> </li>
              <li><strong>Trail Difficulty:</strong> </li>
              <li><strong>Equipment:</strong> </li>
            </ul>
          </div>
        </div>

        <!-- Actions -->
        <div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md">
          <div class="flex flex-col sm:flex-row gap-4 justify-between items-center">
            <div class="flex items-center">
              <input 
                type="checkbox" 
                id="save-as-draft" 
                name="saveAsDraft"
                class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                checked
              />
              <label for="save-as-draft" class="ml-2 block text-sm text-gray-700 dark:text-gray-300">
                Save as draft
              </label>
            </div>
            
            <div class="flex gap-4">
              <button 
                type="button" 
                id="preview-btn"
                class="px-4 py-2 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors"
              >
                Preview
              </button>
              <button 
                type="submit"
                class="px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors"
              >
                Save Adventure
              </button>
            </div>
          </div>
        </div>
      </form>
    </div>
  </main>

  <Footer />
</Layout>

<style>
  .toolbar-btn {
    @apply px-4 py-1 text-sm border border-gray-300 dark:border-gray-500 rounded bg-white dark:bg-gray-600 text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-500 transition-colors;
  }
  
  #content-editor:empty:before {
    content: attr(data-placeholder);
    color: #9CA3AF;
    pointer-events: none;
  }
  
  #content-editor h2 {
    @apply text-xl font-bold mt-6 mb-3 text-gray-900 dark:text-white;
  }
  
  #content-editor h3 {
    @apply text-lg font-semibold mt-4 mb-2 text-gray-900 dark:text-white;
  }
  
  #content-editor p {
    @apply mb-3 text-gray-800 dark:text-gray-200;
  }
  
  #content-editor ul, #content-editor ol {
    @apply ml-6 mb-3;
  }
  
  #content-editor li {
    @apply mb-1 text-gray-800 dark:text-gray-200;
  }
  
  #content-editor strong {
    @apply font-bold;
  }
  
  #content-editor em {
    @apply italic;
  }
</style>

<script>
  // Rich text editor functionality
  document.addEventListener('DOMContentLoaded', () => {
    const editor = document.getElementById('content-editor') as HTMLElement | null;
    const form = document.getElementById('adventure-form') as HTMLFormElement | null;
    const imageUpload = document.getElementById('image-upload') as HTMLInputElement | null;
    const dropZone = document.getElementById('drop-zone') as HTMLElement | null;
    const imagePreview = document.getElementById('image-preview') as HTMLElement | null;
    
    if (!editor || !form || !imageUpload || !dropZone || !imagePreview) {
      console.error('Required elements not found');
      return;
    }
    
    // Toolbar functionality
    document.querySelectorAll('.toolbar-btn').forEach((btn) => {
      btn.addEventListener('click', (e) => {
        e.preventDefault();
        const button = btn as HTMLButtonElement;
        const command = button.dataset.command;
        const value = button.dataset.value || null;
        
                 if (command) {
           document.execCommand(command, false, value || undefined);
           editor.focus();
         }
      });
    });
    
    // Image upload handling
    dropZone.addEventListener('click', () => imageUpload.click());
    
    dropZone.addEventListener('dragover', (e) => {
      e.preventDefault();
      dropZone.classList.add('border-blue-500', 'bg-blue-50', 'dark:bg-blue-900');
    });
    
    dropZone.addEventListener('dragleave', () => {
      dropZone.classList.remove('border-blue-500', 'bg-blue-50', 'dark:bg-blue-900');
    });
    
    dropZone.addEventListener('drop', (e) => {
      e.preventDefault();
      dropZone.classList.remove('border-blue-500', 'bg-blue-50', 'dark:bg-blue-900');
      if (e.dataTransfer?.files) {
        handleFiles(e.dataTransfer.files);
      }
    });
    
    imageUpload.addEventListener('change', (e) => {
      const target = e.target as HTMLInputElement;
      if (target.files) {
        handleFiles(target.files);
      }
    });
    
    function handleFiles(files: FileList) {
      Array.from(files).forEach((file: File) => {
        if (file.type.startsWith('image/')) {
          const reader = new FileReader();
          reader.onload = (e) => {
                         const result = e.target?.result as string;
             if (result && imagePreview) {
               const img = document.createElement('div');
               img.className = 'relative';
               img.innerHTML = `
                 <img src="${result}" class="w-full h-32 object-cover rounded-lg" />
                 <button type="button" class="absolute top-2 right-2 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-sm hover:bg-red-600" onclick="this.parentElement.remove()">×</button>
               `;
               imagePreview.appendChild(img);
             }
          };
          reader.readAsDataURL(file);
        }
      });
    }
    
    // Form submission
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(form);
      const content = editor.innerHTML;
      const draftCheckbox = document.getElementById('save-as-draft') as HTMLInputElement | null;
      const isDraft = draftCheckbox?.checked || false;
      
      const tagsValue = formData.get('tags') as string | null;
      const elevationValue = formData.get('elevation') as string | null;
      
      // Collect form data
      const adventureData = {
        title: formData.get('title') as string,
        country: formData.get('country') as string,
        elevation: elevationValue ? parseInt(elevationValue) : 0,
        date: formData.get('date') as string,
        description: formData.get('description') as string,
        difficulty: formData.get('difficulty') as string,
        duration: (formData.get('duration') as string) || '1 day',
        tags: tagsValue ? tagsValue.split(',').map((tag: string) => tag.trim()).filter((tag: string) => tag) : [],
        youtubeUrl: (formData.get('youtubeUrl') as string) || undefined,
        featured: formData.has('featured'),
        content: content,
        isDraft: isDraft
      };
      
      console.log('Adventure data:', adventureData);
      
      // TODO: Implement actual save functionality
      alert(`Adventure "${adventureData.title}" saved as ${isDraft ? 'draft' : 'published'}!`);
    });
    
    // Preview functionality
    const previewBtn = document.getElementById('preview-btn');
    if (previewBtn) {
      previewBtn.addEventListener('click', () => {
        const content = editor.innerHTML;
        const titleInput = document.getElementById('title') as HTMLInputElement | null;
        const countrySelect = document.getElementById('country') as HTMLSelectElement | null;
        const elevationInput = document.getElementById('elevation') as HTMLInputElement | null;
        const difficultySelect = document.getElementById('difficulty') as HTMLSelectElement | null;
        
        const previewWindow = window.open('', '_blank');
        if (previewWindow) {
          const title = titleInput?.value || 'Untitled';
          const country = countrySelect?.value || 'Unknown';
          const elevation = elevationInput?.value || '0';
          const difficulty = difficultySelect?.value || 'Unknown';
          
          previewWindow.document.open();
          previewWindow.document.write(`
            <html>
              <head>
                <title>Preview - ${title}</title>
                <style>
                  body { font-family: system-ui, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
                  h2 { color: #1f2937; font-size: 1.5rem; font-weight: bold; margin-top: 2rem; margin-bottom: 1rem; }
                  h3 { color: #374151; font-size: 1.25rem; font-weight: 600; margin-top: 1.5rem; margin-bottom: 0.5rem; }
                  p { margin-bottom: 1rem; line-height: 1.6; }
                  ul, ol { margin-left: 2rem; margin-bottom: 1rem; }
                  li { margin-bottom: 0.25rem; }
                </style>
              </head>
              <body>
                <h1>${title}</h1>
                <p><strong>Country:</strong> ${country}</p>
                <p><strong>Elevation:</strong> ${elevation}m</p>
                <p><strong>Difficulty:</strong> ${difficulty}</p>
                <hr>
                ${content}
              </body>
            </html>
          `);
          previewWindow.document.close();
        }
      });
    }
  });
</script> 